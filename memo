了解。**「0行は不可 → 常に1行は残す」**前提で、速くて安定する改修版です。
ポイントは「クリア時に1行だけ確保」「列数は貼付前にMaster側を合わせる（エラーにしない）」です。

⸻

1) ユーティリティ（新規 or 追記）

'=== modTableUtils.bas ===
Option Explicit

' AutoFilterがかかっている時だけ解除
Public Sub ClearFilterIfNeeded(lo As ListObject)
    On Error Resume Next
    If Not lo.AutoFilter Is Nothing Then
        If lo.AutoFilter.FilterMode Then lo.AutoFilter.ShowAllData
    End If
    On Error GoTo 0
End Sub

' 必要列数に合わせて、ヘッダー + nRows 行に一発リサイズ
Public Sub ResizeTo(lo As ListObject, nRows As Long, Optional nCols As Long = -1)
    Dim hdr As Range: Set hdr = lo.HeaderRowRange
    Dim cols As Long
    If nCols <= 0 Then
        cols = lo.ListColumns.Count
    Else
        cols = nCols
    End If
    If nRows < 1 Then nRows = 1                 ' ★最低1行は確保（0行禁止）
    lo.Resize hdr.Resize(nRows + 1, cols)
End Sub


⸻

2) クリア処理（1行残す高速版）

'=== Clear：Masterクリア＆中間データ破棄（1行残す高速版）===
Public Sub ClearData()
    Dim prevCalc As XlCalculation
    Dim prevUpd As Boolean, prevEvt As Boolean, prevDisp As Boolean, prevPB As Boolean
    Dim t0 As Double: t0 = Timer

    If Len(CurrentMasterTableName) = 0 Then UsePipelineMain

    ' 高速化：画面/計算/イベントOFF
    On Error Resume Next
    prevUpd = Application.ScreenUpdating
    prevEvt = Application.EnableEvents
    prevDisp = Application.DisplayAlerts
    prevCalc = Application.Calculation
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    On Error GoTo 0

    On Error GoTo EH
    Dim lo As ListObject
    Set lo = GetListObjectByName(CurrentMasterTableName)
    If Not lo Is Nothing Then
        ' ページ分割線の再計算抑止（効く）
        prevPB = lo.Parent.DisplayPageBreaks
        lo.Parent.DisplayPageBreaks = False

        ' フィルタがかかっている時だけ解除
        ClearFilterIfNeeded lo

        ' ★最重要：ヘッダー＋1行に一発リサイズ（0行は使わない）
        ResizeTo lo, 1

        ' 1行は空のはずだが、安全のためクリア（1行なので軽い）
        If Not lo.DataBodyRange Is Nothing Then lo.DataBodyRange.ClearContents

        lo.Parent.DisplayPageBreaks = prevPB
    End If

    ' 中間データの解放（既存ロジック踏襲）
    HasRaw = False
    IsProcessed = False
    On Error Resume Next
    If (Not Not RawJoined) <> 0 Then Erase RawJoined
    If (Not Not m_baseRowIdx) <> 0 Then Erase m_baseRowIdx
    On Error GoTo 0
    m_baseTblName = ""
    Set TableData = Nothing
    Set KeyIndexSingle = Nothing
    Set KeyIndexMulti = Nothing

DONE:
    ' 復帰
    On Error Resume Next
    Application.ScreenUpdating = prevUpd
    Application.EnableEvents = prevEvt
    Application.DisplayAlerts = prevDisp
    Application.Calculation = prevCalc
    On Error GoTo 0

    MsgBox "初期化しました。（" & Format(Timer - t0, "0.00") & "s）", vbInformation
    Exit Sub

EH:
    On Error Resume Next
    Application.ScreenUpdating = prevUpd
    Application.EnableEvents = prevEvt
    Application.DisplayAlerts = prevDisp
    Application.Calculation = prevCalc
    On Error GoTo 0
    MsgBox "ClearDataでエラー: " & Err.Description, vbCritical
End Sub

これで、B4＝20000行に戻す重いリサイズをやめ、常に1行のみ確保します。
既存の ResetMasterSize は クリア時には使いません（必要なら別用途に残す）。

⸻

3) 貼り付け処理（列数をMaster側に合わせてから貼る）

'=== Masterへ貼付：列を合わせてから、行も一発リサイズして代入 ===
Public Sub PasteToMasterByTable(masterTbl As ListObject, dataArr As Variant)
    Dim rows As Long, cols As Long
    rows = UBound(dataArr, 1)
    cols = UBound(dataArr, 2)

    ' ★列数が違ってもエラーにせずMasterを合わせる（0行禁止なので行=1で列合わせ）
    If masterTbl.ListColumns.Count <> cols Then
        ResizeTo masterTbl, 1, cols
    End If

    ' ★必要行に一発リサイズ（最低1行保証）
    ResizeTo masterTbl, rows, cols

    ' rows=0（0件結果）の場合：1行残るだけで値代入は不要
    If rows >= 1 Then
        masterTbl.DataBodyRange.Value = dataArr
    Else
        ' 念のため空にしておく
        If Not masterTbl.DataBodyRange Is Nothing Then masterTbl.DataBodyRange.ClearContents
    End If
End Sub

これで「列数不一致エラー」を出さずにMaster側を正規化してから貼り付けます。
0件結果でも最低1行は残る仕様に対応済み。

⸻

補足（運用のヒント）
	•	B4の既定行数は未使用に：クリア時に大量行へ戻すのは重いので不採用。必要なら「見た目の空行」だけ別ボタンで増やす運用に分離すると快適です。
	•	UsedRange肥大が気になるとき：たまに Dim tmp:Set tmp = masterTbl.Parent.UsedRange を呼ぶと小さくなることがあります。
	•	条件付き書式が重いテーブルは、スタイルをライト系にするとさらに体感が上がります（例：masterTbl.TableStyle = "TableStyleLight1"）。

このまま置き換えて動くはずです。もし既存の他処理と干渉する箇所があれば、その部分だけ調整版をすぐ出します。