# 同じフォルダ内の全CSVを対象
$folderPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
$csvFiles = Get-ChildItem -Path $folderPath -Filter *.csv

# ZIPファイル名（重複しないよう日時付きでもOK）
$zipPath = Join-Path $folderPath "original_csv_backup.zip"

# すでにZIPが存在したら削除
if (Test-Path $zipPath) {
    Remove-Item $zipPath -Force
}

Write-Host "=== 元CSVをZIPに圧縮中... ==="
Compress-Archive -Path $csvFiles.FullName -DestinationPath $zipPath -Force
Write-Host "→ ZIP作成完了: $zipPath"
Write-Host ""

# CSV修正版を作成
foreach ($file in $csvFiles) {
    Write-Host "修正中: $($file.Name)"

    # ファイルをバイナリとして読み込み
    $bytes = [System.IO.File]::ReadAllBytes($file.FullName)

    # BOM判定
    if ($bytes.Length -ge 3 -and $bytes[0] -eq 0xEF -and $bytes[1] -eq 0xBB -and $bytes[2] -eq 0xBF) {
        $encoding = [System.Text.Encoding]::UTF8
        $text = $encoding.GetString($bytes[3..($bytes.Length - 1)])
    }
    elseif ($bytes.Length -ge 2 -and $bytes[0] -eq 0xFF -and $bytes[1] -eq 0xFE) {
        $encoding = [System.Text.Encoding]::Unicode
        $text = $encoding.GetString($bytes)
    }
    elseif ($bytes.Length -ge 2 -and $bytes[0] -eq 0xFE -and $bytes[1] -eq 0xFF) {
        $encoding = [System.Text.Encoding]::BigEndianUnicode
        $text = $encoding.GetString($bytes)
    }
    else {
        try {
            $encoding = [System.Text.Encoding]::GetEncoding("shift_jis")
            $text = $encoding.GetString($bytes)
        } catch {
            $encoding = [System.Text.Encoding]::UTF8
            $text = $encoding.GetString($bytes)
        }
    }

    # 改行コードを統一（CRLF）
    $text = $text -replace "`r?`n", "`r`n"

    # 修正版ファイル名を作成（例: sample_fixed.csv）
    $newFile = Join-Path $folderPath ($file.BaseName + "_fixed.csv")

    # UTF-8 BOM付きで保存
    [System.IO.File]::WriteAllText($newFile, $text, New-Object System.Text.UTF8Encoding($true))

    Write-Host "→ 修正版を作成: $($newFile)"
}

Write-Host ""
Write-Host "=== 全CSV処理完了！ ==="
Write-Host "元データはZIP化済み、修正版は _fixed.csv として保存されています。"